stages:
  - build
  - test
  - docker
  - analyze
  - security

variables:
  SONARQUBE_URL: http://sonarqube:9000
  SONAR_TOKEN: $SONAR_TOKEN
  # DOCKER_HOST: tcp://docker:2375
  # DOCKER_TLS_CERTDIR: ""

# services:
#   - name: docker:dind
#     command: ["--host=tcp://0.0.0.0:2375", "--tls=false"]

# image: docker:latest

docker:
  stage: docker
  image: docker:stable
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
    DOCKER_DRIVER: overlay2
  services:
    - name: docker:dind
      command: ["--host=tcp://0.0.0.0:2375", "--tls=false"]
  script:
    - docker login -u minaunall -p mina12345l.
    - docker build -t mina:latest .
   # - docker login -u mina.unal -p passwordun harbor_registry
    #- docker tag 
    #- docker push

analyze:
  stage: analyze
  image:
    name: sonarsource/sonar-scanner-cli:5.0.1
    entrypoint: [""]
  variables:
    SONAR_SCANNER_OPTS: "-Xmx1024m"
    GIT_DEPTH: 0
    SONAR_HOST_URL: https://codecamp24-sonarqube.obss.io
  before_script:
    - echo "192.168.210.103 codecamp24-sonarqube.obss.io" >> /etc/hosts
    - echo "192.168.210.104 codecamp24-sonarqube.obss.io" >> /etc/hosts
  script:
    - sonar-scanner -Dsonar.projectKey=myapp -Dsonar.sources=. -Dsonar.host.url="$SONAR_HOST_URL" -Dsonar.login=$SONAR_TOKEN
  allow_failure: true


